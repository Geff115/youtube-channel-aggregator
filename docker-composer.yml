version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: youtube_channels
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  app:
    build: .
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/youtube_channels
      - REDIS_URL=redis://redis:6379/0
      - FLASK_ENV=development
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app
      - ./data:/app/data
    command: python app.py

  celery_worker:
    build: .
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/youtube_channels
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - ./app:/app
      - ./data:/app/data
    command: celery -A tasks worker --loglevel=info --concurrency=4

  celery_beat:
    build: .
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/youtube_channels
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - ./app:/app
    command: celery -A tasks beat --loglevel=info

volumes:
  postgres_data: